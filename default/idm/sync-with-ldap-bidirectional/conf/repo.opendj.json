{
  "embedded": true,
  "queries": {
    "generic": {
      "query-all-ids": {
        "_queryFilter": "true",
        "_fields": "_id,_rev"
      },
      "credential-query": {
        "_queryFilter": "/userName eq \"${username}\""
      },
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq \"${username}\""
      },
      "get-by-field-value": {
        "_queryFilter": "/${field} eq \"${value}\""
      },
      "for-userName": {
        "_queryFilter": "/userName eq \"${uid}\""
      },
      "query-all": {
        "_queryFilter": "true"
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq \"${linkType}\" AND /firstId = \"${firstId}\""
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq \"${linkType}\""
      },
      "get-recons": {
        "_queryFilter": "/entryType eq \"summary\"",
        "_fields": "reconId,mapping,activitydate",
        "_sortKeys": "-activitydate"
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq \"${userId}\"",
        "_sortKeys": "-createDate"
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le ${timestamp} and (/state eq \"1\" or /state eq \"2\")"
      },
      "query-cluster-instances": {
        "_queryFilter": "true"
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq \"${instanceId}\""
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstId eq \"${fullResourceId}\" and /firstPropertyName eq \"${resourceFieldName}\") or (/secondId eq \"${fullResourceId}\" and /secondPropertyName eq \"${resourceFieldName}\")"
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstId eq \"${vertex1Id}\" and /firstPropertyName eq \"${vertex1FieldName}\") and (/secondId eq \"${vertex2Id}\" and /secondPropertyName eq \"${vertex2FieldName}\")) or ((/firstId eq \"${vertex2Id}\" and /firstPropertyName eq \"${vertex2FieldName}\") and (/secondId eq \"${vertex1Id}\" and /secondPropertyName eq \"${vertex1FieldName}\"))"
      }
    },
    "explicit": {
      "query-all-ids": {
        "_queryFilter": "true",
        "_fields": "_id,_rev"
      },
      "credential-query": {
        "_queryFilter": "/userName eq \"${username}\""
      },
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq \"${username}\""
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq \"${linkType}\" AND /firstId = \"${firstId}\""
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq \"${linkType}\""
      },
      "query-all": {
        "_queryFilter": "true"
      }
    }
  },
  "commands" : {
    "delete-mapping-links" : {
      "_queryFilter": "/linkType eq \"${mapping}\"",
      "operation": "DELETE"
    },
    "delete-target-ids-for-recon" : {
      "_queryFilter": "/reconId eq \"${reconId}\"",
      "operation": "DELETE"
    }
  },
  "rest2LdapOptions": {
    "readOnUpdatePolicy": "controls",
    "useSubtreeDelete": false,
    "usePermissiveModify": true,
    "useMvcc": true,
    "mvccAttribute": "etag"
  },
  "indices" : {
    "fr-idm-json" : {
      "type" : [ "EQUALITY" ]
    },
    "fr-idm-managed-user-json" : {
      "type" : [ "EQUALITY" ]
    },
    "fr-idm-managed-role-json" : {
      "type" : [ "EQUALITY" ]
    },
    "fr-idm-cluster-json" : {
      "type" : [ "EQUALITY" ]
    },
    "fr-idm-relationship-json" : {
      "type" : [ "EQUALITY" ]
    }
  },
  "schemaProviders" : {
    "Managed User Json" : {
      "matchingRuleName" : "caseIgnoreJsonQueryMatchManagedUser",
      "matchingRuleOid" : "1.3.6.1.4.1.36733.2.3.4.1",
      "caseSensitiveStrings" : false,
      "fields" : [ "userName", "givenName", "sn", "mail", "accountStatus" ]
    },
    "Managed Role Json" : {
      "matchingRuleName" : "caseIgnoreJsonQueryMatchManagedRole",
      "matchingRuleOid" : "1.3.6.1.4.1.36733.2.3.4.2",
      "caseSensitiveStrings" : false,
      "fields" : [ "condition/**", "temporalConstraints/**" ]
    },
    "Relationship Json" : {
      "matchingRuleName" : "caseIgnoreJsonQueryMatchRelationship",
      "matchingRuleOid" : "1.3.6.1.4.1.36733.2.3.4.3",
      "caseSensitiveStrings" : true,
      "fields" : [ "firstId", "firstPropertyName", "secondId", "secondPropertyName" ]
    },
    "Cluster Object Json" : {
      "matchingRuleName" : "caseIgnoreJsonQueryMatchClusterObject",
      "matchingRuleOid" : "1.3.6.1.4.1.36733.2.3.4.4",
      "caseSensitiveStrings" : false,
      "fields" : [ "timestamp", "state" ]
    }
  },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=forgerock,dc=com"
    },
    "explicitMapping": {
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "uidObject", "fr-idm-internal-user" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "roles": {
            "type": "json", "ldapAttribute": "fr-idm-role", "isMultiValued": true
          },
          "password": {
            "type": "json", "ldapAttribute": "fr-idm-password"
          }
        }
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "fr-idm-internal-role" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "cn", "isRequired": true, "writability": "createOnly"
          },
          "description": {
            "type": "simple", "ldapAttribute": "description"
          }
        }
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=forgerock,dc=com",
        "uniqueConstraints" : [
          ["linkType", "linkQualifier", "firstId"],
          ["linkType", "linkQualifier", "secondId"]
        ],
        "objectClasses": [ "uidObject", "fr-idm-link" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "linkType": {
            "type": "simple", "ldapAttribute": "fr-idm-link-type"
          },
          "linkQualifier": {
            "type": "simple", "ldapAttribute": "fr-idm-link-qualifier"
          },
          "firstId": {
            "type": "simple", "ldapAttribute": "fr-idm-link-firstId"
          },
          "secondId": {
            "type": "simple", "ldapAttribute": "fr-idm-link-secondId"
          }
        }
      },
      "clusteredrecontargetids" : {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "uidObject", "fr-idm-recon-clusteredTargetIds" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "reconId": {
            "type": "simple", "ldapAttribute": "fr-idm-recon-id"
          },
          "targetIds": {
            "type": "json", "ldapAttribute": "fr-idm-recon-targetIds"
          }
        }
      }
    },
    "genericMapping": {
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=forgerock,dc=com"
      },
      "ui/*" : {
        "dnTemplate": "ou=ui,dc=openidm,dc=forgerock,dc=com"
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=forgerock,dc=com"
      },
      "managed/user" : {
        "dnTemplate" : "ou=user,ou=managed,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-managed-user"],
        "jsonAttribute" : "fr-idm-managed-user-json"
      },
      "managed/role" : {
        "dnTemplate" : "ou=role,ou=managed,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-managed-role"],
        "jsonAttribute" : "fr-idm-managed-role-json"
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=forgerock,dc=com"
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=forgerock,dc=com"
      },
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-cluster-obj" ],
        "jsonAttribute" : "fr-idm-cluster-json"
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-relationship" ],
        "jsonAttribute" : "fr-idm-relationship-json"
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=forgerock,dc=com"
      },
      "reconprogressstate" : {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=forgerock,dc=com"
      },
      "jsonstorage" : {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=forgerock,dc=com"
      }
    }
  }
}
